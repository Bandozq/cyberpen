const callGeminiAPI = async (prompt) => {
    const apiKey = import.meta.env.VITE_GEMINI_API_KEY;
    const url = `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${apiKey}`;

    const fullPrompt = `
        As an expert penetration testing instructor, create a detailed, beginner-friendly learning module for the penetration testing topic: "${prompt}".
        Assume the user has basic knowledge of Linux and VMs.
        Format your entire response in clean Markdown. Use ### for section titles.
        The sections should be:
        1.  **Learning Objectives:** A bulleted list of what the user will learn.
        2.  **Key Topics to Cover:** Detailed explanations of core concepts.
        3.  **Suggested Tools:** A list of relevant tools for the topic.
        4.  **Recommended Labs & Resources:** A list of articles, videos, and other resources.
        5.  **Hands-on Practice Labs:** A curated list of specific, real-world labs from platforms like Hack The Box, TryHackMe, or VulnHub. For each lab, provide its name, the platform it's on, and a brief explanation of how it relates to the topic.

        Important: For any list item that represents an actionable task (like "Complete the X lab" or "Read article Y"),
        prefix it with "[ ]" to mark it as a checklist item. For all other list items, do not add a prefix.
    `;

    const response = await fetch(url, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            contents: [{
                parts: [{
                    text: fullPrompt
                }]
            }]
        })
    });

    if (!response.ok) {
        const errorBody = await response.text();
        throw new Error(`Gemini API error: ${response.status} ${response.statusText} - ${errorBody}`);
    }

    const data = await response.json();
    return data.candidates[0].content.parts[0].text;
};

export { callGeminiAPI };
