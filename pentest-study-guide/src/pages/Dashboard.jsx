import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { useAuth } from '../contexts/AuthContext';
import { supabase } from '../supabase';

const Dashboard = () => {
    const [paths, setPaths] = useState([]);
    const [searchTerm, setSearchTerm] = useState('');
    const [loading, setLoading] = useState(true);
    const { user } = useAuth();

    useEffect(() => {
        const getPaths = async () => {
            if (!user) return;
            const { data, error } = await supabase
                .from('learning_paths')
                .select('*')
                .eq('user_id', user.id)
                .order('created_at', { ascending: false });

            if (error) {
                console.error('Error fetching learning paths:', error);
            } else {
                setPaths(data);
            }
            setLoading(false);
        };

        getPaths();
    }, [user]);

    const calculateProgress = (path) => {
        if (!path.checklist || path.checklist.length === 0) {
            return 0;
        }
        const completed = path.checklist.filter(Boolean).length;
        return Math.round((completed / path.checklist.length) * 100);
    };

    const filteredPaths = paths.filter(path =>
        path.topic.toLowerCase().includes(searchTerm.toLowerCase())
    );

    if (loading) {
        return <div className="p-4 text-center">Loading dashboard...</div>;
    }

    return (
        <div className="container mx-auto p-4 sm:p-6 lg:p-8">
            <div className="flex justify-between items-center mb-6">
                <h1 className="text-3xl font-bold text-gray-900">My Dashboard</h1>
                <input
                    type="text"
                    placeholder="Search paths..."
                    className="p-2 border rounded"
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                />
            </div>
            {filteredPaths.length === 0 ? (
                <div className="text-center bg-white p-8 rounded-lg shadow">
                    <h3 className="text-xl font-medium text-gray-900">
                        {paths.length === 0 ? 'Welcome!' : 'No Matching Paths'}
                    </h3>
                    <p className="mt-1 text-sm text-gray-500">
                        {paths.length === 0 ? "You haven't generated any learning paths yet." : "Try a different search term."}
                    </p>
                    {paths.length === 0 && (
                        <div className="mt-6">
                            <Link
                                to="/generate"
                                className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700"
                            >
                                Generate Your First Path
                            </Link>
                        </div>
                    )}
                </div>
            ) : (
                <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
                    {filteredPaths.map((path) => (
                        <Link to={`/path/${path.id}`} key={path.id} className="block bg-white p-6 rounded-lg shadow hover:shadow-lg transition-shadow">
                            <h2 className="font-bold text-lg text-gray-900 mb-2 truncate">{path.topic}</h2>
                            <div className="flex items-center justify-between text-sm text-gray-600">
                                <span>Progress</span>
                                <span>{calculateProgress(path)}%</span>
                            </div>
                            <div className="w-full bg-gray-200 rounded-full h-2 mt-1">
                                <div
                                    className="bg-indigo-600 h-2 rounded-full"
                                    style={{ width: `${calculateProgress(path)}%` }}
                                ></div>
                            </div>
                        </Link>
                    ))}
                </div>
            )}
        </div>
    );
};

export default Dashboard;
